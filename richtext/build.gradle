apply plugin: 'com.android.library'

def appLibs = rootProject.ext.appLibraries;


ext {

    bintrayRepo = System.getenv("REPO")
    bintrayName = System.getenv("NAME")

    publishedGroupId = System.getenv("GROUPID")
    libraryName = System.getenv("LIBNAME")
    artifact = System.getenv("ARTIFACT")

    libraryDescription = System.getenv("DESCRIPTION")

    siteUrl = System.getenv("SITEURL")
    gitUrl = System.getenv("GITURL")



    developerId = System.getenv("DEVLOPERID")
    developerName = System.getenv("DEVELOPERNAME")
    developerEmail = System.getenv("DEVELOPEREMAIL")

    licenseName = System.getenv("LICENSE")
    licenseUrl = System.getenv("LICENSEURL")

    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
//        main {
//            res.srcDirs = ['src/main/res']
//        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.ccil.cowan.tagsoup:tagsoup:${appLibs.TAGSOUP_VERSION}"
    compile "com.google.android.exoplayer:exoplayer:${appLibs.ANDROID_EXOPLAYER_VERSION}"
    compile 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.media2:media2-exoplayer:1.0.0-rc01'

}

apply plugin: 'com.jfrog.bintray'

version = appLibs.RICH_TEXT_VERSION


task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    //archives javadocJar
    archives sourcesJar
}


bintray {


    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = System.getenv("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}


apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {



    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}